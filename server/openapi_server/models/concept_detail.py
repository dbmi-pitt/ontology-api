# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ConceptDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concept=None, perfterm=None):  # noqa: E501
        """ConceptDetail - a model defined in OpenAPI

        :param concept: The concept of this ConceptDetail.  # noqa: E501
        :type concept: str
        :param perfterm: The perfterm of this ConceptDetail.  # noqa: E501
        :type perfterm: str
        """
        self.openapi_types = {
            'concept': str,
            'perfterm': str
        }

        self.attribute_map = {
            'concept': 'concept',
            'perfterm': 'perfterm'
        }

        self._concept = concept
        self._perfterm = perfterm

    @classmethod
    def from_dict(cls, dikt) -> 'ConceptDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConceptDetail of this ConceptDetail.  # noqa: E501
        :rtype: ConceptDetail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concept(self):
        """Gets the concept of this ConceptDetail.


        :return: The concept of this ConceptDetail.
        :rtype: str
        """
        return self._concept

    @concept.setter
    def concept(self, concept):
        """Sets the concept of this ConceptDetail.


        :param concept: The concept of this ConceptDetail.
        :type concept: str
        """

        self._concept = concept

    @property
    def perfterm(self):
        """Gets the perfterm of this ConceptDetail.


        :return: The perfterm of this ConceptDetail.
        :rtype: str
        """
        return self._perfterm

    @perfterm.setter
    def perfterm(self, perfterm):
        """Sets the perfterm of this ConceptDetail.


        :param perfterm: The perfterm of this ConceptDetail.
        :type perfterm: str
        """

        self._perfterm = perfterm
